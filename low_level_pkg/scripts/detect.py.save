#!/usr/bin/env python3

import rospy
from sensor_msgs.msg import LaserScan
import math

DETECTION_RANGE = 0.4

def callback(scan_data):
    distances = scan_data.ranges
    angle_min = scan_data.angle_min
    angle_increment = scan_data.angle_increment

    object_detected = False
    for i in range(0, len(distances), 2):
        distance = distances[i]
        if distance < DETECTION_RANGE and distance > scan_data.range_min:
            object_detected = True
		if     angle = angle_min + i * angle_increment
    angle_degrees = math.degrees(angle)

    angle = angle_min + i * angle_increment
    angle_degrees = math.degrees(angle)

            print(f"Object detected at {distance :.2f} meters, angle: {angle_degrees :.2f} degrees")
    
    if not object_detected:
        print("There is no object within the range")

def laser_scan_listener():
    rospy.init_node('laser_detection', anonymous=True)
    rospy.Subscriber('/scan', LaserScan, callback)
    rospy.spin()

if __name__ == '__main__':
    try:
        laser_scan_listener()
    except rospy.ROSInterruptException:
        pass
